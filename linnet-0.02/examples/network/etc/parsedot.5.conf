# Three axes with nodes mapped by connectivity
#
# axisin - in degree only
# axisout - out degree only
# axisall - in/out degree
#
# Node position score taken from connectivity (number of edge)
# Node position sorted ascending (inside of figure = lower values)
# Node position by rank order (ordered score)
#
# Links formatted by connectivity, highlighting the most connected
# node on each axis, by axis color.
#
# E. coli
# ihfa_ihfb - red (most connected source)
# crp - orange (most connected sink/source)
# flhd - green (most connected sink)
#
# Linux
# printk - red (most connected source)
# load_elf_binary - orange (most connected sink/source)
# _spin_lock - green (most connected sink)
# 


<axes>

<axis>
name  = axisin_persistent
color = dgreen
rule  = 'attribute_label' eq 'persistent' && !node_out && node_in
remap_connection = axisall_persistent_left=>axisall_persistent_right,axisall_nonpersistent_left=>axisall_nonpersistent_right
node_position  = score
node_position_sort = num
node_index_position = yes
</axis>

<axis>
name  = axisin_nonpersistent
color = green
rule  = 'attribute_label' eq 'nonpersistent' && !node_out && node_in
remap_connection = axisall_persistent_left=>axisall_persistent_right,axisall_nonpersistent_left=>axisall_nonpersistent_right
node_position  = score
node_position_sort = num
node_index_position = yes
</axis>

<axis>
name     = axisout_persistent
rule     = "attribute_label" eq "persistent" && !node_in && node_out
color    = dred
remap_connection = axisall_right=>axisall_left
remap_connection = axisall_persistent_right=>axisall_persistent_left,axisall_nonpersistent_right=>axisall_nonpersistent_left
node_position = score
node_position_sort = num
node_index_position = yes
</axis>

<axis>
name     = axisout_nonpersistent
rule     = "attribute_label" eq "nonpersistent" && !node_in && node_out
color    = red
remap_connection = axisall_persistent_right=>axisall_persistent_left,axisall_nonpersistent_right=>axisall_nonpersistent_left
node_position = score
node_position_sort = num
node_index_position = yes
</axis>

<axis>
name  = axisall_persistent_left
rule  = "attribute_label" eq "persistent" && node_in && node_out && node_in + node_out
color = dyellow
multi_assign_ok = axisall_persistent_left,axisall_persistent_right
remap_connection = axisall_persistent_left=>axisall_persistent_right,axisall_nonpersistent_left=>axisall_nonpersistent_right
self_connection = axisall_persistent_right
node_position = score
node_position_sort = num
node_index_position = yes
</axis>

<axis>
name  = axisall_persistent_right
rule  = "attribute_label" eq "persistent" && node_in && node_out && node_in + node_out
color = dyellow
multi_assign_ok = axisall_persistent_left,axisall_persistent_right
self_connection = axisall_persistent_left
remap_connection = axisall_persistent_right=>axisall_persistent_left,axisall_nonpersistent_right=>axisall_nonpersistent_left
node_position = score
node_position_sort = num
node_index_position = yes
</axis>

<axis>
name  = axisall_nonpersistent_left
rule  = "attribute_label" eq "nonpersistent" && node_in && node_out && node_in + node_out
color = yellow
multi_assign_ok = axisall_nonpersistent_left,axisall_nonpersistent_right
remap_connection = axisall_persistent_left=>axisall_persistent_right,axisall_nonpersistent_left=>axisall_nonpersistent_right
self_connection = axisall_nonpersistent_right
node_position = score
node_position_sort = num
node_index_position = yes
</axis>

<axis>
name  = axisall_nonpersistent_right
rule  = "attribute_label" eq "nonpersistent" && node_in && node_out && node_in + node_out
color = yellow
multi_assign_ok = axisall_nonpersistent_left,axisall_nonpersistent_right
self_connection = axisall_nonpersistent_left
remap_connection = axisall_persistent_right=>axisall_persistent_left,axisall_nonpersistent_right=>axisall_nonpersistent_left
node_position = score
node_position_sort = num
node_index_position = yes
</axis>

</axes>

<links>

<link>
rule_node = 'node_name' eq 'ihfa_ihfb' || 'node_name' eq 'load_elf_binary'
color      = red_a15
z          = 15
thickness  = 2
</link>

<link>
rule_node = 'node_name' eq 'crp' || 'node_name' eq 'printk'
color      = yellow_a15
z          = 15
thickness  = 2
</link>

<link>
rule_node = 'node_name' eq 'flhd' || 'node_name' eq '_spin_lock'
color      = green_a15
z          = 15
thickness  = 2
</link>

</links>

<files>
dir      = output/
segments = segments.txt
links    = links.txt
</files>
