# The .dot files of the random plots will be parsed to place
# each node type (sink, source, both) onto a separate axis.
#
# The axis names are
#
# axisin  - in degree only (sink)
# axisout - out degree only (source)
# axisall - in/out degree (both)
#
# Node position score taken from connectivity (number of edge)
# Node position sorted ascending (inside of figure = lower values)
# Node position by rank order (ordered score)
#
# There are a few rules that change the way the links are drawn, based
# on node connectivity.
#
# a -> b links thick red if degreeout(a|b) > 3
# a -> b links thick green if degreeout(a|b) == 0 AND degreein(a|b) > 3
# a -> b links thick blue if degree(a|b) == 2 
#
# where degree(a|b) == 2 means degree(a) == 2 OR degree(b) == 2 (i.e. tests both nodes)
#
# Reference to colors use names found in etc/colors.conf in the root of the linnet distribution.
# Colors with transparency have _aN suffixed, where N = 1..auto_alpha_steps, where
# auto_alpha_steps is the parameter in the <image> block of etc/linnet.conf. 
# For example, for auto_alpha_steps=10 
# - COLORNAME_a1  is the LEAST transparent
# - COLORNAME_a10 is the MOST transparent

# Rules that determine how nodes are assigned to axes, and placed on axes

<axes>

<axis>
name  = axisin
color = green
rule  = !node_out && node_in
node_position        = score
node_position_sort   = num
node_index_position  = yes
</axis>

<axis>
name  = axisout
rule  = !node_in && node_out
color = red
node_position        = score
node_position_sort   = num
node_index_position  = yes
</axis>

<axis>
name  = axisall
rule  = node_in && node_out && node_in + node_out
color = yellow
self_connection_hide = yes
node_position        = score
node_position_sort   = num
node_index_position  = yes
</axis>
</axes>

# Rules that determine how links are formatted

<links>

<link>
# degreeout(a) = 0 and degreein(a) > 3 
# OR
# degreeout(b) = 0 and degreein(b) > 3
rule_node  = node_out == 0 && node_in > 3
color      = green_a5
z          = 15
thickness  = 1
</link>

<link>
# degreeout(a) > 3
# OR
# degreeout(b) > 3
rule_node  = node_in > 3
color      = red_a5
z          = 10
thickness  = 1
</link>

<link>
# degreeout(a) = 2
# OR
# degreeout(b) = 2
rule_node  = node_all == 2
color      = blue_a5
z          = 20
thickness  = 1
</link>

</links>

<files>
dir      = data/
segments = segments.txt
links    = links.txt
</files>
