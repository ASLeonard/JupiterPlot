#!/usr/bin/make -Rrf
ifdef profile
SHELL=/usr/bin/time -f '=> jupiter: %e %C' /bin/bash -o pipefail
else
SHELL=/bin/bash -o pipefail
endif

ROOT_DIR:=$(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))

#------------------------------------------------------------
# params
#------------------------------------------------------------

s=3000 #pixel diameter width
name1=before
name2=after

#------------------------------------------------------------
# meta rules
#------------------------------------------------------------

.PRECIOUS:
.DELETE_ON_ERROR:
.PHONY: check-params generateplot

default: generateplot

generateplot: check-params $(name).svg

check-name-param:
ifndef name
	$(error missing required param 'name' (output file prefix))
endif

check-params: check-name-param
ifndef prefix1
	$(error missing required param 'prefix1' (Prefix to jupiterplot run))
endif
ifndef prefix2
	$(error missing required param 'prefix2' (Prefix to jupiterplot run))
endif

#------------------------------------------------------------
# pipeline rules
#------------------------------------------------------------

#link files
$(name).$(name1).links.final: $(prefix1).links.final:
	ln -s $< $@

$(name).$(name2).links.final: $(prefix2).links.final:
	ln -s $< $@
	
$(name).$(name1).seqOrder.txt: $(prefix1).seqOrder.txt:
	ln -s $< $@

$(name).$(name2).seqOrder.txt: $(prefix2).seqOrder.txt:
	ln -s $< $@

$(name).$(name1).karyotype: $(prefix1).karyotype:
	ln -s $< $@
	
$(name).$(name2).karyotype: $(prefix2).karyotype:
	ln -s $< $@

%.links: %.$(name1).links.final %.$(name2).links.final
	perl $(ROOT_DIR)/bin/linksToHiveLink.pl -p %.$(name1) $< > $@
	perl $(ROOT_DIR)/bin/linksToHiveLink.pl -p %.$(name2) %.$(name2).links.final >> $@
	
%.conf %.segments : %.$(name1).seqOrder.txt %.$(name2).seqOrder.txt %.$(name1).karyotype %.$(name2).karyotype
	perl $(ROOT_DIR)/bin/karyotypeHive.pl -s $(s) -r $(ROOT_DIR)/config/rawConfHive.conf -p $* %.$(name1) %.$(name2)

%.svg: %.conf %.segments %.links 
	$(ROOT_DIR)/linnet-0.02/bin/linnet -conf $<
